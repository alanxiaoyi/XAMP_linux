<?xml version="1.0"?>
<model_list>
	<model name="miss_rate under interference" ID="1">
		<directory name="./acapp/acapp"/>
		<inputs>
			<input name="csqfile1" description="circular profile file path" primary="y"/>
			<input name="csqfile2" description="circular profile file 2 path" primary="y"/>
		</inputs>
		<outputs>
			<output name="missrate_interference" description=""/>		
		</outputs>
		<model_description>							
		On typical CMP, L2 or lower level caches are shared by multiple cores. Cache sharing impacts on threads performance by the impacting 						     
		on cache miss rates. This model predicts the original miss rates and the miss rates after 2 threads interfering each other by sharing one cache. CSQ files are needed as input. The format of CSQ file
		can be found in ./acapp/csq/*. For the definition of CSQ file please refer to the paper.
		Reported error: minimum absolute error: 0%, maximum absolute error: 25%, geometric mean of absolute error: 3.7%. The error is based on SPEC2k and specified CMP setting.
		For more information please refer to Dhruba Chandra, et al. Predicting Inter-Thread Cache Contention on a Chip Multi-Processor Architecture. 
		</model_description>
		<user_guide>	
			
			command line: "-c" "-f1" [csqfile1 directory] "-f2" [csqfile2 directory]. More info please refer to ./acapp/README.txt.	
		</user_guide>
		<defaults>
			<default command="-c -f1 ./csq/benchmark1.csq -f2 ./csq/benchmark2.csq" description=""/>		
		</defaults>	
	</model>
	
	<model name="miss_rate varying replacement policy" ID="2">
		<directory name="./acapp/acapp"/>
		<inputs>
			<input name="csqfile1" description="circular profile file path" primary="y"/>
			<input name="rpindex" description="replacement policy number" primary="n"/>
		</inputs>
		<outputs>
			<output name="missrate_changerp" description=""/>		
		</outputs>
		<model_description>							
			This model predicts miss rate under different cache replacement policies and cache sets. The model needs CSQ file of certain benchmark and specified replacement 
			policy. The format of CSQ file can be found in ./acapp/csq/*. For the definition of CSQ file please refer to the paper.
			Predefined repalcement policy list is in ./acapp/rplist.log. User can also define their own replacement policy. 
			Reported error: maximum error is 20%, but most of them less than 10%, Mean error is 1.41%. Error info is based on SPEC2k and SPEC06 with certain cache setting.
			For more information please refer to Fei Guo and Yan Solihin, An Analytical Model for Cache Replacement Policy Performance.
	
		</model_description>
		<user_guide>	
			command: "-p" [rpindex] "-f1" [profile1]. Modify usr_rp.in and rplist.log, and use command "-n" for costomized replacement policy. 
			More info please refer to ./acapp/README.txt.
		</user_guide>
		<defaults>	
			<default command="-p 1 -f1 ./csq/benchmark1.csq" description=""/>				
		</defaults>	
	</model>
	
	<model name="miss_rate varying cache size" ID="3">
		<directory name="./acapp/acapp"/>
		<inputs>
			<input name="csqfile1" description="circular profile or stack distance profile file path" primary="y"/>
		</inputs>
		<outputs>
			<output name="missrate" description=""/>		
		</outputs>
		<model_description>							
			This model is used to predicted the missrate when vary cache assicitivity number. It needs CSQ file as input. The format of CSQ file
			can be found in ./acapp/csq/*. For the definition of CSQ file please refer to the paper.
			For more information please refer to Fei Guo and Yan Solihin, An Analytical Model for Cache Replacement Policy Performance.		
		</model_description>
		<user_guide>
			Command:  "-a"  [min assoc] [max assoc] "-f1" [profile1]. More info please refer to ./acapp/README.txt.			
		</user_guide>
		<defaults>
			<default command="-a 4 7 -f1 ./csq/benchmark1.csq" description="" />	
			<default command="-a 2 4 -f1 ./csq/benchmark1.csq" description="" />					
		</defaults>	
	</model>

	<model name="memory wall model" ID="4">
		<directory name="./mem/memwall_ex"/>
		<inputs>
			<input name="powerlaw_index" description="can use 0.5" primary="n"/>
			<input name="chip_area" description="base line chip area (in CEAs)" primary="y"/>
			<input name="core_number" description="base line core number " primary="y"/>
			<input name="indirect_factor" description="factor for indirect technique" primary="n"/>
			<input name="direct_factor" description="factor for direct technique" primary="n"/>
			<input name="annual_bw_growth" description="bandwidth growth rate per year" primary="n"/>
			
		</inputs>
		<outputs>
			<output name="future_core_number" description=""/>		
		</outputs>
		<model_description>							
			As transistor density continues grow, off-chip memory bandwiidth becomes bottelneck to restrict the future multicore scaling.
			This model is used to predict the future core number can be supported considering such memory wall limitation. The model needs several inputs including number of
			generations to predict, baseline CMP setting, technique factors, power law index. For more information, please refer to Brian Rogers, et al, Scaling the Bandwidth Wall: 
			Challenges in and Avenues for CMP scaling.
		</model_description>
		<user_guide>			
			Command: "[#Gen] [N0] [P0] [a] [F] [B_rate] [D]" ;
			1.#Gen: how many generation you want to predict;
			2. N0: chip area;
			3. P0: core number;
			4. a: power law index;
			5. F: indirect factor;
			6. B_rate: annual_bw_groth;
			7. D: direct factor;
			
		</user_guide>
		<defaults>	
			<default command="7 32 16 0.5 1 1.1 1" description=""/>				
		</defaults>	
	</model>

	<model name="extension of Amdahl's Law" ID="5">
		<directory name="./amdahl/amdahl_ex"/>
		<inputs>
			<input name="fparn" description="fraction of parallel part outside critical section" primary="y"/>
			<input name="fparc" description="fraction of parallel part inside critical section" primary="y"/>
			<input name="pctn" description="contention probability" primary="y"/>
			<input name="thread_number" description="number of threads" primary="y"/>
			<input name="big_core_speed" description="big core speed (small core is 1)" primary="n"/>
			<input name="parameter_a" description="ACS parameter" primary="n"/>
			<input name="parameter_b" description="ACS parameter" primary="n"/>
			
		</inputs>
		<outputs>
			<output name="chip_performance" description="exution time"/>		
		</outputs>
		<model_description>							
			Previous Amdahl's law assumes either completely sequential code or completely parallel code. 
			This model is an extensed Amdahl's law that considers synchronization of critical sections. User should input critical and uncritical fraction of parallel code, the 
		 probability that critical parts contention, and core number. User can also enter three more parameters for predicting performance in the case of heterogenious core. 
		 For more information, please refer to "Stijin Eyerman, et al. Modeling Critical Sections in Amdahl's Law and its Implications for Multicore Design". 

		</model_description>
		<user_guide>
			Command: [fparn] [fparc] [pctn] [n_threads] [p] [a] [b],  
			note a, b, p is optional. P for asymmetric core, a, b for ACS 		
		</user_guide>
		<defaults>	
			<default command="0.5 0.5 0.5 2" description=""/>			
		</defaults>	
	</model>

	<model name="Moguls model" ID="6">
		<directory name="./moguls/moguls_ex"/>
		<inputs>
			<input name="BRc GB/s" description="bandwidth requirement of the starting cache" primary="y"/>
			<input name="memory_bandwidth, GB/s" description="bandwidth provided by the main memory " primary="y"/>
			<input name="factor_p" description="constant determined by process technology" primary="n"/>
			<input name="first level shared cache size" description="starting level cache size" primary="y"/>			
		</inputs>
		<outputs>
			<output name="cache_size" description=""/>		
			<output name="cache_level" description=""/>		
			<output name="cache_bandwidth" description=""/>		
		</outputs>
		<model_description>							
			This model is developed to calculate the optimal cache hierarchy for minimum power consumption. 
			Notice that user need a starting level cache as the first level cache, the bandwidth requirement of this starting cache, power law index, and off-chip memory bandwidth.
			For more information, please refer to "Gangyu Sun, et al. Moguls: a Model to Explore the Memory Hierarchy for Bandwidth Improvements".
		</model_description>
		<user_guide>
			Command : [BRc] [BM] [p] [C0];	BRc is the starting cache bandwidth requirement,BM is off-chip memory bandwidth, p is a factor determined by technique and process, C0 is the 
			size of the starting cache.
Note the predicted cache hierarchy is between the first level cache and the main memory. 			
		</user_guide>
		<defaults>	
			<default command="16 8 0.5 256" description=""/>			
		</defaults>	
	</model>
	
	<model name="Bandwidth partition modeling" ID="7">
		<directory name="./bandwidth/bandwidth_ex"/>
		<inputs>
			<input name="thread_number" description="number of threads" primary="y"/>
			<input name="miss_rate" description="thread i's L2 missrate" primary="y"/>
			<input name="cache_access_frequency" description="thread i's access frequency (million/s)" primary="y"/>
			<input name="CPI_infinitL2,i" description="thread is CPI when assuming infinit L2 cache" primary="y"/>
			<input name="CPI_alone,i" description="Thread is CPI when running alone in a CMP system" primary="y"/>
			<input name="L2_miss_penalty,i" description="thread is L2 miss penalty" primary="y"/>		
			<input name="memory_bandwidth, B/s" description="bandwidth provided by the main memory (Bytes/S)" primary="y"/>		
			<input name="block_size" description="block size (Bytes)" primary="y"/>			
		</inputs>
		<outputs>
			<output name="Bandwidth_nature_partition" description=""/>		
			<output name="Bandwidth_optimal_partition" description=""/>		
			<output name="weighted_speedup" description=""/>		
		</outputs>
		<model_description>							
			This model can calculate the optimal and nature partition of off-chip memory bandwidth among threads. It takes threads' memory access information and outputs 
			bandwidth partition and weighted speedup. Reported error of weighted speedup: arithmetic mean: 7.2%, geometric mean 5.2%, maximum 18.3%. Error is based on some mixed workload of SPEC06 on certain
			configuration.
			For more information please refer to "Fang Liu, et al. Understanding How off-chip Memory Bandwidth Partitioning in Chip Multiprocessors
			Affects System Performance"
		</model_description>
		<user_guide>
			User should browse ./bandwidth/input file to fill up the inputs first, and then use command as below.
			Command:
			1. "-input", model parse the input file and then generate the bandwidth partition information as well as weighted speedup;
			2. "-Bandwidth [minimum] [maximum]", the model changes the main memory bandwidth from minimum to maximum, and outputs all the bandwidth partition information for comparison;
			3. "-MAratio [M0] [A0]", User enters one thread's miss rate and memory access rate, the tool automatically changes the miss frequency ratio of the two threads. 
			Outputs all bandwidth partition information	and weighted speedup for comparison.	
		</user_guide>
		<defaults>	
			<default command="-input" description=""/>			
		</defaults>	
	</model>	
	
	
	<model name="cache miss under context switch" ID="8">
		<directory name="./context_swt/context_ex"/>
		<inputs>
			<input name="csqfile1" description="circular profile file path" primary="y"/>
			<input name="associtivity_number" description="number of associativity" primary="y"/>
			<input name="shift_amount" description="shift amount" primary="y"/>		
		</inputs>
		<outputs>
			<output name="context_switch_miss" description=""/>			
		</outputs>
		<model_description>							
			The model predicts cache misses due to context switch. The model assumes a number of shift amount, which represent the cache perturbation caused by context switch. 
			CSQ file is needed. The format of CSQ file can be found in ./acapp/csq/*. For the definition of CSQ file please refer to the paper.
			For more information please refer to "Fang Liu, et al. Characterizing and Modeling the Behavior of Context Switch Misses" 
		</model_description>
		<user_guide>
			Command line: "[number of associativity] [shift_amount] [csqfile path]"	
		</user_guide>
		<defaults>	
			<default command="8 6 ../acapp/csq/benchmark1.csq" description=""/>			
		</defaults>	
	</model>	
		
	<model name="Performance model under data sharing" ID="9">
		<directory name="./sharing/sharing_ex"/>
		<inputs>
			<input name="CPIpreL2" description="CPI in the core and L1s" primary="y"/>
			<input name="apiL2" description="L2 accesses per inst " primary="y"/>
			<input name="hit_latency" description="L2 access time in cycle" primary="y"/>	
			<input name="core_number" description="circular profile file path" primary="y"/>
			<input name="chip_area" description="total area of the chip for cores and cache, in CEAs, 1 CEA equal to 1MB cache area" primary="y"/>
			<input name="core_area" description="area of each core in CEAs" primary="y"/>	
			<input name="miss_rate_for_1M cache" description="L2 miss rate for a 1MB L2" primary="y"/>
			<input name="powerlaw_index" description="" primary="n"/>
			<input name="data_sharing_impact_factor" description="Data sharing impact on miss rates" primary="y"/>	
			<input name="L2_miss_penalty" description="cache access penalty, in number of cycles" primary="y"/>
			<input name="memory_bandwidth, GB/s" description="bandwidth provided by the main memory  GB/s" primary="y"/>
			<input name="core_frequency" description="processor frequency GHz" primary="y"/>	
			<input name="block_size" description="block size (Bytes)" primary="y"/>	
			<input name="fs" description="fraction of program that cannot be parallelized" primary="y"/>				
		</inputs>
		<outputs>
			<output name="chip_performance" description=""/>	
			<output name="optimal_core_number" description=""/>				
		</outputs>
		<model_description>							
			In multi-threaded applications, data sharing help improve cache miss rate. The model predictc chip performance that considers data sharing impact;
			With the assumption of data sharing, the model can predict the best core number for performance given certain core area. Please browse ./sharing/input for inputs
			parameters the model needs.
			For more information please refer to "Anil Krishna, et al. Data Sharing in Multi-threaded Applications and its Impact on Chip Design"
		</model_description>
		<user_guide>
			Command line: 
			1. "-input -AC [chip area] -n [core number] -lL2 [L2 access latency]", The command make the model read the inputfile in ./sharing directory and predict chip performance.
				-AC -n and -lL2 is optional, the parameter after them will replace the ones in the input file.
			2. "-cvc" makes the model vary the core to cache area ratio and output all the chip performance for comparison.
		</user_guide>
		<defaults>	
			<default command="-input -AC 256 -n 20 -lL2 10" description=""/>	
			<default command="-cvc" description=""/>					
		</defaults>	
	</model>	

	<model name="CACTI" ID="10">
		<directory name="./cacti/cacti"/>
		<inputs>	
			<input name="too_many" description="please refer to CACTI document" primary="y"/>		
		</inputs>
		<outputs>	
			<output name="too_many" description="please refer to CACTI document"/>			
		</outputs>
		<model_description>							
			Please see read me in the CACTI directory.
		</model_description>
		<user_guide>	
			Please refer to CACTI readme. Note: Please modify io.c if you want to print result to stdio		
		</user_guide>
		<defaults>	
			<default command="4194304 32 4 1 0 0 0 1 90 256 1 34 2 0 0 0 0 0 1 360 0 0 0 0 1 1 1 1 0 0 50 10 10 0 1 1" description=""/>					
		</defaults>	
	</model>	
	
	<model name="Simplescalar for creating CSQ file" ID="11">
		<directory name="./simplesim-3.0/sim-outorder"/>
		<inputs>	
			<input name="too_many" description="please refer to simplescalar document" primary="y"/>		
		</inputs>
		<outputs>	
			<output name="too_many" description="please refer to simplescalar document"/>			
		</outputs>
		<model_description>							
			Command line:
			"-fastfwd [instructions skipped] -max:inst [instructions simulated] [binary file path of benchmark]"
			
		</model_description>
		<user_guide>	
			CSQ file will be created in the same directory with the benchmark.	
		</user_guide>
		<defaults>	
			<default command="-fastfwd 100000 -max:inst 100000 ../../spec2k/FP_lendian/equake/equake.exe < ../../spec2k/FP_lendian/equake/inp.in" description=""/>					
		</defaults>	
	</model>		

	
</model_list>